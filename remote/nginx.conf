server {
    listen 80;
    root /var/www/udps;
    server_name udps.nbsoftsolutions.com;

    # LetsEncrypt.org TLS certificate renewal
    location ~ .well-known {
        root /var/www/udps;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl http2;

    # certs sent to the client in SERVER HELLO are concatenated in ssl_certificate
    ssl_certificate /etc/letsencrypt/live/udps.nbsoftsolutions.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/udps.nbsoftsolutions.com/privkey.pem;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;

    # intermediate configuration. tweak to your needs.
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:ECDHE-RSA-DES-CBC3-SHA:ECDHE-ECDSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
    ssl_prefer_server_ciphers on;

    # HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
    add_header Strict-Transport-Security max-age=15768000;

    # OCSP Stapling ---
    # fetch OCSP records from URL in ssl_certificate and cache them
    ssl_stapling on;
    ssl_stapling_verify on;

    ## verify chain of trust of OCSP response using Root CA and Intermediate certs
    ssl_trusted_certificate /etc/letsencrypt/live/udps.nbsoftsolutions.com/chain.pem;

    add_header Content-Security-Policy "default-src 'self'; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com blob:; font-src 'self' https://fonts.gstatic.com; img-src 'self' https://maps.googleapis.com;";

    # Do not allow site to be in an iframe
    add_header X-Frame-Options "DENY";

    # Prevent browsers from incorrectly detecting non-scripts as scripts
    add_header X-Content-Type-Options "nosniff";

    root /var/www/udps;
    server_name udps.nbsoftsolutions.com;
    gzip on;

    # Given any requested file, if it exists, given it to the requestor, else
    # serve up the index file, which enables single page applications that
    # change history and still function when the user refreshes.
    location / {
        try_files $uri /index.html =404;
    }

    # Requests for javascript files are handled specially every build of the
    # site includes the hash in the name of the javascript, so we are able to
    # cache it for forever. We also Gzip the javascript because it's relatively
    # large. :(
    location /js/ {
        expires 1y;
        gzip_types application/javascript;
        add_header Cache-Control "public";
    }

    # If someone requests for `app.json`, give them the aggregated json file
    location = /app.json {
        gzip_types application/json;
        try_files /data/data.json =404;
    }
}
